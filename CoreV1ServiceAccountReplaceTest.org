# -*- ii: apisnoop; -*-
#+TITLE: Write CoreV1ServiceAccount Replace Test - +1
#+AUTHOR: ii team
#+TODO: TODO(t) NEXT(n) IN-PROGRESS(i) BLOCKED(b) | DONE(d)
#+OPTIONS: toc:nil tags:nil todo:nil
#+EXPORT_SELECT_TAGS: export
#+PROPERTY: header-args:sql-mode :product postgres


* TODO Progress [1/6]                                                :export:
- [X] APISnoop org-flow: [[https://github.com/apisnoop/ticket-writing/blob/master/CoreV1ServiceAccountReplaceTest.org][CoreV1ServiceAccountReplaceTest.org]]
- [ ] Test approval issue: [[https://issues.k8s.io/][#]]
- [ ] Test PR: [[https://pr.k8s.io/][#]]
- [ ] Two weeks soak start date: [[https://testgrid.k8s.io/][testgrid-link]]
- [ ] Two weeks soak end date:
- [ ] Test promotion PR: [[https://pr.k8s.io/][#]]

* Identifying an untested feature Using APISnoop                     :export:

According to this APIsnoop query, there are still three remaining LimitRange endpoints which are untested.

  #+NAME: untested_stable_core_endpoints
  #+begin_src sql-mode :eval never-export :exports both :session none
    SELECT
      endpoint,
      path,
      kind
      FROM testing.untested_stable_endpoint
      where eligible is true
      and endpoint ilike '%ServiceAccount%'
      order by kind, endpoint desc
      limit 10;
  #+end_src

  #+RESULTS: untested_stable_core_endpoints
  #+begin_SRC example
                 endpoint                |                         path                          |      kind
  ---------------------------------------+-------------------------------------------------------+----------------
   replaceCoreV1NamespacedServiceAccount | /api/v1/namespaces/{namespace}/serviceaccounts/{name} | ServiceAccount
  (1 row)

  #+end_SRC

* API Reference and feature documentation                            :export:

- [[https://kubernetes.io/docs/reference/kubernetes-api/][Kubernetes API Reference Docs]]
- [[https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/service-account-v1/][Kubernetes API / Authentication Resources / ServiceAccount]]
- [[https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/serviceaccount.go][client-go - ServiceAccount]]

* Test outline                                                       :export:

#+begin_src
Feature: Test replace ServiceAccount api endpoint
#+end_src

- replaceCoreV1NamespacedServiceAccount

#+begin_src
Scenario: confirm that the replace action will apply to a ServiceAccount
  Given the e2e test has created a ServiceAccount
  And AutomountServiceAccountToken setting is updated to true from false
  When the test updates the ServiceAccount
  Then the requested action is accepted without any error
  And the AutomountServiceAccountToken is found to be true
#+end_src

* E2E Test                                                           :export:

Using a number of existing e2e test practices a new [[https://github.com/ii/kubernetes/blob/create-service-account-replace-test/test/e2e/auth/service_accounts.go#L803-L833][ginkgo test]] has been created for one ServiceAccount endpoint.
The e2e logs for this test are listed below.

#+begin_src
[It] should update a ServiceAccount
  /home/ii/go/src/k8s.io/kubernetes/test/e2e/auth/service_accounts.go:803
STEP: Creating ServiceAccount "e2e-sa-kdl2c"  10/03/22 12:36:45.522
Oct  3 12:36:45.527: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-kdl2c"  10/03/22 12:36:45.527
Oct  3 12:36:45.533: INFO: AutomountServiceAccountToken: true
#+end_src

* Verifying increase in coverage with APISnoop                       :export:

This query shows which ServiceAccount endpoints are hit within a short period of running this e2e test

#+begin_src sql-mode :eval never-export :exports both :session none
select distinct substring(endpoint from '\w+') AS endpoint,
                right(useragent,30) AS useragent
from testing.audit_event
where endpoint ilike '%ServiceAccount%'
and release_date::BIGINT > round(((EXTRACT(EPOCH FROM NOW()))::numeric)*1000,0) - 60000
and useragent like 'e2e%should%'
order by endpoint
limit 10;
#+end_src

#+RESULTS:
#+begin_SRC example
               endpoint                |           useragent
---------------------------------------+--------------------------------
 createCoreV1NamespacedServiceAccount  | should update a ServiceAccount
 listCoreV1NamespacedServiceAccount    | should update a ServiceAccount
 readCoreV1NamespacedServiceAccount    | should update a ServiceAccount
 replaceCoreV1NamespacedServiceAccount | should update a ServiceAccount
(4 rows)

#+end_SRC

* Final notes                                                        :export:

If a test with these calls gets merged, *test coverage will go up by 1 point*

This test is also created with the goal of conformance promotion.

-----
/sig testing

/sig architecture

/area conformance
