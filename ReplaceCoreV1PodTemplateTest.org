# -*- ii: apisnoop; -*-
#+TITLE: Write ReplaceCoreV1PodTemplate Test - +1
#+AUTHOR: ii team
#+TODO: TODO(t) NEXT(n) IN-PROGRESS(i) BLOCKED(b) | DONE(d)
#+OPTIONS: toc:nil tags:nil todo:nil
#+EXPORT_SELECT_TAGS: export
#+PROPERTY: header-args:sql-mode :product postgres


* TODO Progress [1/6] :export:
- [X] APISnoop org-flow: [[https://github.com/apisnoop/ticket-writing/blob/master/ReplaceCoreV1PodTemplateTest.org][ReplaceCoreV1PodTemplateTest.org]]
- [ ] test approval issue : [[https://issues.k8s.io/][#]]
- [ ] test pr : [[https://pr.k8s.io/][!]]
- [ ] two weeks soak start date : [[https://testgrid.k8s.io/][testgrid-link]]
- [ ] two weeks soak end date : xxxx-xx-xx
- [ ] test promotion pr : [[https://pr.k8s.io/][!]]

* Identifying an untested feature Using APISnoop                     :export:

According to this APIsnoop query, there is still one remaining PodTemplate endpoint which is untested.

  #+NAME: untested_stable_core_endpoints
  #+begin_src sql-mode :eval never-export :exports both :session none
    SELECT
      endpoint,
      path,
      kind
      FROM testing.untested_stable_endpoint
      where eligible is true
      and endpoint ilike '%PodTemplate'
      order by kind, endpoint desc
      limit 10;
  #+end_src

  #+RESULTS: untested_stable_core_endpoints
  #+begin_SRC example
                endpoint              |                        path                        |    kind
  ------------------------------------+----------------------------------------------------+-------------
   replaceCoreV1NamespacedPodTemplate | /api/v1/namespaces/{namespace}/podtemplates/{name} | PodTemplate
  (1 row)

  #+end_SRC

* API Reference and feature documentation                            :export:
- [[https://kubernetes.io/docs/reference/kubernetes-api/][Kubernetes API Reference Docs]]
- [[https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/podtemplate-v1/][Kubernetes API / Workload Resources / PodTemplate]]
- [[https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/podtemplate.go][client-go - PodTemplate]]

* The mock test                                                      :export:
** Test outline

#+begin_src
Feature: Test one Pod Template api endpoint

Scenario: the test replaces a pod template
  Given the e2e test has a pod template
  And an annotation has been created
  When the test replaces the pod template
  Then the requested action is accepted without any error
  And the applied annotation is found
#+end_src

** Test the functionality in Go

Using a number of existing e2e test practices a new [[https://github.com/ii/kubernetes/blob/replace-pod-template/test/e2e/common/node/podtemplates.go#L167-L204][ginkgo test]] has been created for pod templates.
The e2e logs for this test are listed below.

#+begin_src
[It] should replace a pod template
  /home/ii/go/src/k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:167
STEP: Create a pod template
STEP: Replace a pod template
Feb 23 11:24:52.893: INFO: Found updated podtemplate annotation: "true"
#+end_src

* Verifying increase in coverage with APISnoop :export:
** Listing endpoints hit by the new e2e test

This query shows the endpoints hit within a short period of running the e2e test

#+begin_src sql-mode :eval never-export :exports both :session none
select distinct  endpoint, right(useragent,42) AS useragent
from testing.audit_event
where endpoint ilike '%PodTemplate'
and release_date::BIGINT > round(((EXTRACT(EPOCH FROM NOW()))::numeric)*1000,0) - 60000
and useragent like 'e2e%should%'
order by endpoint
limit 10;
#+end_src

#+RESULTS:
#+begin_SRC example
              endpoint              |                 useragent
------------------------------------+--------------------------------------------
 createCoreV1NamespacedPodTemplate  | PodTemplates should replace a pod template
 readCoreV1NamespacedPodTemplate    | PodTemplates should replace a pod template
 replaceCoreV1NamespacedPodTemplate | PodTemplates should replace a pod template
(3 rows)

#+end_SRC

* Final notes :export:

If a test with these calls gets merged, *test coverage will go up by 1 points*

This test is also created with the goal of conformance promotion.

-----  
/sig testing  

/sig architecture  

/area conformance  

* Options :neverexport:
** Delete all events after postgres initialization
   #+begin_src sql-mode :eval never-export :exports both :session none
   delete from audit_event where bucket = 'apisnoop' and job='live';
   #+end_src

