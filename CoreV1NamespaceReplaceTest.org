# -*- ii: apisnoop; -*-
#+TITLE: Create CoreV1 Namespace Replace Test - +1
#+AUTHOR: ii team
#+TODO: TODO(t) NEXT(n) IN-PROGRESS(i) BLOCKED(b) | DONE(d)
#+OPTIONS: toc:nil tags:nil todo:nil
#+EXPORT_SELECT_TAGS: export
#+PROPERTY: header-args:sql-mode :product postgres


* TODO Progress [1/6]                                                :export:
- [X] APISnoop org-flow: [[https://github.com/apisnoop/ticket-writing/blob/master/CoreV1NamespaceReplaceTest.org][CoreV1NamespaceReplaceTest.org]]
- [ ] Test approval issue: [[https://issues.k8s.io/][#]]
- [ ] Test PR: [[https://pr.k8s.io/][!]]
- [ ] Two weeks soak start date: [[https://testgrid.k8s.io/][testgrid-link]]
- [ ] Two weeks soak end date:
- [ ] Test promotion PR: [[https://pr.k8s.io/][!]]

* Identifying an untested feature Using APISnoop                     :export:

According to this APIsnoop query, there are still a remaining Namespace endpoint which is untested.

  #+NAME: untested_stable_core_endpoints
  #+begin_src sql-mode :eval never-export :exports both :session none
    SELECT
      endpoint,
      path,
      kind
      FROM testing.untested_stable_endpoint
      where eligible is true
      and endpoint ilike '%Namespace'
      order by kind, endpoint desc
      limit 10;
  #+end_src

  #+RESULTS: untested_stable_core_endpoints
  #+begin_SRC example
          endpoint        |           path            |   kind
  ------------------------+---------------------------+-----------
   replaceCoreV1Namespace | /api/v1/namespaces/{name} | Namespace
  (1 row)

  #+end_SRC

* API Reference and feature documentation                            :export:

- [[https://kubernetes.io/docs/reference/kubernetes-api/][Kubernetes API Reference Docs]]
- [[https://kubernetes.io/docs/reference/kubernetes-api/cluster-resources/namespace-v1/][Kubernetes API / Cluster Resources / Namespace]]
- [[https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/namespace.go][client-go - Namespace]]

* Test outline :export:

#+begin_src
Feature: Test replace Namespace api endpoint
#+end_src

- replaceCoreV1Namespace

#+begin_src
Scenario: confirm that the replace action will apply the changes to a Namespace
  Given the e2e test has created a Namespace
  And a new label has been generated
  When the test updates the Namespace
  Then the requested action is accepted without any error
  And the newly applied label is found
#+end_src

* E2E Test :export:

Using a number of existing e2e test practices a new [[https://github.com/ii/kubernetes/blob/create-namespace-replace-test/test/e2e/apimachinery/namespace.go#L286-L304][ginkgo test]] has been created for 1 Namespace endpoint.
The e2e logs for this test are listed below.

#+begin_src
[It] should apply an update to a Namespace
  /home/heyste/go/src/k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:286
STEP: Updating Namespace "namespaces-3021"
Jun  8 11:58:02.718: INFO: Namespace "namespaces-3021" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4d96a478-b803-4cb6-abc6-eb6019b556f7", "kubernetes.io/metadata.name":"namespaces-3021", "namespaces-3021":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
#+end_src

* Verifying increase in coverage with APISnoop                       :export:
** Listing endpoints hit by the new e2e test

This query shows the following endpoints are hit within a short period of running this e2e test

#+begin_src sql-mode :eval never-export :exports both :session none
select distinct  endpoint, right(useragent,37) AS useragent
from testing.audit_event
where endpoint ilike '%Namespace'
and release_date::BIGINT > round(((EXTRACT(EPOCH FROM NOW()))::numeric)*1000,0) - 60000
and useragent like 'e2e%should%'
order by endpoint
limit 10;
#+end_src

#+RESULTS:
#+begin_SRC example
        endpoint        |               useragent
------------------------+---------------------------------------
 createCoreV1Namespace  | should apply an update to a Namespace
 deleteCoreV1Namespace  | should apply an update to a Namespace
 readCoreV1Namespace    | should apply an update to a Namespace
 replaceCoreV1Namespace | should apply an update to a Namespace
(4 rows)

#+end_SRC


* Final notes                                                        :export:

If a test with these calls gets merged, *test coverage will go up by 1 point*

This test is also created with the goal of conformance promotion.

-----  
/sig testing

/sig architecture  

/area conformance  
