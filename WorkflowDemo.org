#+title: Kubernetes Conformance Workflow Demo
#+startup: overview

* Launch Cluster
** Using kind

#+begin_src tmux :session ":" :results silent
cd ~/apisnoop/kind
kind create cluster --config kind+apisnoop.yaml
#+end_src

* Clone K8s repo

#+begin_src tmux :session ":" :results silent
mkdir -p ~/go/src/k8s.io
cd $_
git clone --depth 1 https://github.com/kubernetes/kubernetes.git
#+end_src

* Clone Conformance Workflow

#+begin_src tmux :session ":" :results silent
cd ~/
git clone https://github.com/apisnoop/ticket-writing.git
#+end_src

* Review Cluster & apisnoop

#+begin_src tmux :session ":" :results silent
kubectl get nodes -owide
#+end_src

#+begin_src tmux :session ":" :results silent
kubectl get pods -A
#+end_src

* Walk through Service Account e2e tests

#+begin_src tmux :session ":" :results silent
cd ~/go/src/k8s.io/kubernetes
grep ginkgo.It test/e2e/auth/service_accounts.go
#+end_src

#+begin_src tmux :session ":" :results silent
grep framework.ConformanceIt test/e2e/auth/service_accounts.go
#+end_src

* Switch to Conformance workflow for Service Account Token

Check workflow document for ServiceAccountToken endpoint
  - [[~/ticket-writing/CoreV1ServiceAccountTokenTest.org]]

* Run e2e test for Service Account Token
** Watch namespaces used for e2e tests

#+begin_src tmux :session ":two" :results silent
kubectl get ns -w
#+end_src

** Run e2e test

#+begin_src tmux :session ":" :results silent
cd ~/go/src/k8s.io/kubernetes
export KUBECONFIG=~/.kube/config
export TEST_NAME="should create a serviceAccountToken and ensure a successful TokenReview"
go test ./test/e2e -ginkgo.v -v -timeout=0 -ginkgo.focus="$TEST_NAME"
#+end_src

** Check on the go build

#+begin_src tmux :session ":three" :results silent
htop
#+end_src

* Review apisnoop findings

Check workflow document for ServiceAccountToken endpoint
  - [[~/ticket-writing/CoreV1ServiceAccountTokenTest.org]]
